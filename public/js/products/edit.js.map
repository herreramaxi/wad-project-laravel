{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/alertMessages.js","webpack:///./resources/js/products/edit.js","webpack:///./node_modules/bootstrap-maxlength/dist/bootstrap-maxlength.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","showSuccessMessage","message","$","text","removeAttr","showErrorMessage","require","ProcessSubmit","e","form","modalId","successMessage","errorMessage","checkValidity","preventDefault","stopPropagation","formData","FormData","action","attr","ajax","url","data","cache","contentType","processData","method","success","html","error","jqXHR","textStatus","errorThrown","console","log","complete","modal","classList","add","document","on","event","input","files","reader","FileReader","onload","target","result","readAsDataURL","ex","readURL","this","maxlength","alwaysShow","warningClass","limitReachedClass","placement","special","destroyed","remove","handler","fn","extend","options","callback","documentBody","utf8CharByteCount","character","charCodeAt","utf8Length","string","split","map","concat","reduce","sum","val","inputLength","twoCharLinebreak","replace","currentLength","utf8","length","prop","remainingChars","showRemaining","currentInput","indicator","css","display","trigger","updateMaxLengthHTML","currentInputText","maxLengthThisInput","typedChars","output","preText","showCharsTyped","showMaxLength","separator","postText","manageRemainingVisibility","remaining","maxLengthCurrentInput","maxLengthIndicator","threshold","removeClass","addClass","hideRemaining","customMaxAttribute","place","pos","el","getBoundingClientRect","width","offsetWidth","height","offsetHeight","offset","getPosition","type","isPlainObject","cssPos","each","placeWithCSS","inputOuter","outerWidth","actualWidth","actualHeight","appendToParent","top","parent","left","outerHeight","getMaxLength","max","allowOverMax","custom","isFunction","showOnReady","validate","zIndex","firstInit","maxlengthContent","position","whiteSpace","is","mouseup","append","window","resize","ready","focus","indexedSize","removedBytes","bytesPastMax","pop","substr","truncateChars","jQuery"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,IAIjBlC,EAAoBA,EAAoBmC,EAAI,I,kBClFrDhC,EAAOD,QAAU,CACbkC,mBAAoB,SAASC,GACzBC,EAAE,sBAAsBC,KAAKF,GAC7BC,EAAE,wBAAwBE,WAAW,WAGzCC,iBAAkB,SAASJ,GACvBC,EAAE,oBAAoBC,KAAKF,GAC3BC,EAAE,sBAAsBE,WAAW,a,oECR3CE,kBAwBA,SAASC,EAAcC,EAAGC,EAAMC,EAASC,EAAgBC,GACrD,IAA6B,IAAzBH,EAAKI,gBACLL,EAAEM,iBACFN,EAAEO,sBACC,CACHP,EAAEM,iBACF,IAAIE,EAAW,IAAIC,SAASR,GACxBS,EAAShB,EAAEO,GAAMU,KAAK,UAE1BjB,EAAEkB,KAAK,CACHC,IAAKH,EACLI,KAAMN,EACNO,OAAO,EACPC,aAAa,EACbC,aAAa,EACbC,OAAQ,OACRC,QAAS,SAASL,GACdpB,EAAE,aAAa0B,KAAKN,GACpBtB,6BAAmBW,IAEvBkB,MAAO,SAASC,EAAOC,EAAYC,GAC/BC,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACZ3B,2BAAiBO,IAErBuB,SAAU,SAASL,EAAOC,GACtB7B,EAAEQ,GAAS0B,MAAM,WAK7B3B,EAAK4B,UAAUC,IAAI,iBAvDvBhC,EAAQ,IAmBRJ,EAAEqC,UAAUC,GAAG,SAAU,gBAAgB,SAASC,GAC9CA,EAAM1B,kBAjBV,SAAiB2B,GACb,IACI,GAAIA,EAAMC,OAASD,EAAMC,MAAM,GAAI,CAC/B,IAAIC,EAAS,IAAIC,WAEjBD,EAAOE,OAAS,SAAStC,GACrBN,EAAE,iBAAiBiB,KAAK,MAAOX,EAAEuC,OAAOC,SAG5CJ,EAAOK,cAAcP,EAAMC,MAAM,KAEvC,MAAOO,GACL7C,2BAAiB,gDAMrB8C,CAAQC,SAqCZlD,EAAE,kBAAkBsC,GAAG,UAAU,SAAShC,GACtCD,EACIC,EACA4C,KACA,aACA,+BACA,4CAIRlD,EAAE,oBAAoBsC,GAAG,UAAU,SAAShC,GACxCD,EACIC,EACA4C,KACA,eACA,+BACA,4CAKRlD,EAAE,8BAA8BmD,UAAU,CACtCC,YAAY,EAEZC,aAAc,4BACdC,kBAAmB,4BAMnBC,UAAW,yB,kBCzFf,SAAUvD,GACN,aACKA,EAAEuC,MAAMiB,QAAQC,YACjBzD,EAAEuC,MAAMiB,QAAQC,UAAY,CACxBC,OAAQ,SAASnF,GACTA,EAAEoF,SACFpF,EAAEoF,aAKlB3D,EAAE4D,GAAGC,OAAO,CACRV,UAAW,SAASW,EAASC,GACzB,IAAIC,EAAehE,EAAE,QA0BrB,SAASiE,EAAkBC,GACvB,IAAI/F,EAAI+F,EAAUC,aAClB,OAAQhG,EAAQA,EAAI,IAAM,EAAIA,EAAI,KAAO,EAAI,EAAjC,EAEhB,SAASiG,EAAWC,GAChB,OAAOA,EAAOC,MAAM,IAAIC,IAAIN,GAAmBO,OAAO,GAAGC,QAAO,SAAUC,EAAKC,GAC3E,OAAOD,EAAMC,KAGrB,SAASC,EAAYpC,GACjB,IAAIvC,EAAOuC,EAAMmC,MAEb1E,EADA6D,EAAQe,iBACD5E,EAAK6E,QAAQ,qBAAsB,QAEnC7E,EAAK6E,QAAQ,kBAAmB,MAE3C,IAAIC,EAAgB,EASpB,OAPIA,EADAjB,EAAQkB,KACQZ,EAAWnE,GAEXA,EAAKgF,OAEE,SAAvBzC,EAAM0C,KAAK,SAAsC,KAAhB1C,EAAMmC,QACvCI,GAAiB,IAEdA,EAwBX,SAASI,EAAe3C,EAAOW,GAE3B,OADaA,EAAYyB,EAAYpC,GAGzC,SAAS4C,EAAcC,EAAcC,GACjCA,EAAUC,IAAI,CACVC,QAAS,UAEbH,EAAaI,QAAQ,mBAWzB,SAASC,EAAoBC,EAAkBC,EAAoBC,GAC/D,IAAIC,EAAS,GAuBb,OAtBIhC,EAAQ/D,QAEJ+F,EAD2B,mBAApBhC,EAAQ/D,QACN+D,EAAQ/D,QAAQ4F,EAAkBC,GAElC9B,EAAQ/D,QAAQ+E,QAAQ,eAAgBe,GAAYf,QAAQ,mBAAoBc,EAAqBC,GAAYf,QAAQ,eAAgBc,IAGlJ9B,EAAQiC,UACRD,GAAUhC,EAAQiC,SAEjBjC,EAAQkC,eAGTF,GAAUD,EAFVC,GAAUF,EAAqBC,EAI/B/B,EAAQmC,gBACRH,GAAUhC,EAAQoC,UAAYN,GAE9B9B,EAAQqC,WACRL,GAAUhC,EAAQqC,WAGnBL,EAEX,SAASM,EAA0BC,EAAWhB,EAAciB,EAAuBC,GApDnF,IAA4B/D,EAAOgE,EAAWrD,EACtC2C,EAoDAS,IACAA,EAAmB7E,KAAKgE,EAAoBL,EAAaV,MAAO2B,EAAuBA,EAAwBD,IAC3GA,EAAY,GAvDI7D,EAwDO6C,EAxDAmB,EAwDc1C,EAAQ0C,UAxDXrD,EAwDsBmD,EAvD5DR,GAAS,GACRhC,EAAQV,YAAcD,EAAYyB,EAAYpC,GAASgE,IACxDV,GAAS,GAENA,EAoDKV,EAAcC,EAAckB,EAAmBE,YAAY3C,EAAQR,mBAAmBoD,SAAS5C,EAAQT,eAxCvH,SAAuBgC,EAAcC,GAC7BxB,EAAQV,aAGZkC,EAAUC,IAAI,CACVC,QAAS,SAEbH,EAAaI,QAAQ,qBAmCTkB,CAActB,EAAckB,IAGhCnB,EAAcC,EAAckB,EAAmBE,YAAY3C,EAAQT,cAAcqD,SAAS5C,EAAQR,qBAGtGQ,EAAQ8C,qBACJP,EAAY,EACZhB,EAAaqB,SAAS,WAEtBrB,EAAaoB,YAAY,YA0BrC,SAASI,EAAMxB,EAAckB,GACzB,IAAIO,EAvBR,SAAqBzB,GACjB,IAAI0B,EAAK1B,EAAa,GACtB,OAAOrF,EAAE6D,OAAO,GAAwC,mBAA7BkD,EAAGC,sBAAuCD,EAAGC,wBAA0B,CAC9FC,MAAOF,EAAGG,YACVC,OAAQJ,EAAGK,cACZ/B,EAAagC,UAkBNC,CAAYjC,GACtB,GAAkC,aAA9BrF,EAAEuH,KAAKzD,EAAQP,WAInB,GAAIvD,EAAEwH,cAAc1D,EAAQP,YArBhC,SAAsBA,EAAWgD,GAC7B,GAAKhD,GAAcgD,EAAnB,CAGA,IACIkB,EAAS,GACbzH,EAAE0H,KAFkB,CAAE,MAAO,SAAU,OAAQ,QAAS,aAElC,SAAU5J,EAAGuB,GAC/B,IAAIsF,EAAMb,EAAQP,UAAUlE,QACT,IAARsF,IACP8C,EAAOpI,GAAOsF,MAGtB4B,EAAmBhB,IAAIkC,IAUnBE,CAAa7D,EAAQP,UAAWgD,OADpC,CAIA,IAAIqB,EAAavC,EAAawC,aAAcA,EAAatB,EAAmBsB,aAAcC,EAAcvB,EAAmBU,QAASc,EAAexB,EAAmBY,SAKtK,OAJIrD,EAAQkE,iBACRlB,EAAImB,KAAO5C,EAAa6C,SAASb,SAASY,IAC1CnB,EAAIqB,MAAQ9C,EAAa6C,SAASb,SAASc,MAEvCrE,EAAQP,WACd,IAAK,SACHgD,EAAmBhB,IAAI,CACnB0C,IAAKnB,EAAImB,IAAMnB,EAAIK,OACnBgB,KAAMrB,EAAIqB,KAAOrB,EAAIG,MAAQ,EAAIa,EAAc,IAEnD,MAEF,IAAK,MACHvB,EAAmBhB,IAAI,CACnB0C,IAAKnB,EAAImB,IAAMF,EACfI,KAAMrB,EAAIqB,KAAOrB,EAAIG,MAAQ,EAAIa,EAAc,IAEnD,MAEF,IAAK,OACHvB,EAAmBhB,IAAI,CACnB0C,IAAKnB,EAAImB,IAAMnB,EAAIK,OAAS,EAAIY,EAAe,EAC/CI,KAAMrB,EAAIqB,KAAOL,IAErB,MAEF,IAAK,QACHvB,EAAmBhB,IAAI,CACnB0C,IAAKnB,EAAImB,IAAMnB,EAAIK,OAAS,EAAIY,EAAe,EAC/CI,KAAMrB,EAAIqB,KAAOrB,EAAIG,QAEzB,MAEF,IAAK,eACHV,EAAmBhB,IAAI,CACnB0C,IAAKnB,EAAImB,IAAMnB,EAAIK,OACnBgB,KAAMrB,EAAIqB,KAAOrB,EAAIG,QAEzB,MAEF,IAAK,YACHV,EAAmBhB,IAAI,CACnB0C,IAAKnB,EAAImB,IAAMF,EACfI,KAAMrB,EAAIqB,KAAOP,IAErB,MAEF,IAAK,WACHrB,EAAmBhB,IAAI,CACnB0C,IAAKnB,EAAImB,IAAMF,EACfI,KAAMrB,EAAIqB,KAAON,IAErB,MAEF,IAAK,cACHtB,EAAmBhB,IAAI,CACnB0C,IAAKnB,EAAImB,IAAM5C,EAAa+C,cAC5BD,KAAMrB,EAAIqB,KAAON,IAErB,MAEF,IAAK,iBACHtB,EAAmBhB,IAAI,CACnB0C,IAAKnB,EAAImB,IAAMF,EAAe,EAC9BI,KAAMrB,EAAIqB,KAAOP,EAAaC,EAAa,IAE/C,MAEF,IAAK,sBACHtB,EAAmBhB,IAAI,CACnB0C,IAAKnB,EAAImB,IAAMnB,EAAIK,OACnBgB,KAAMrB,EAAIqB,KAAOrB,EAAIG,MAAQY,IAEjC,MAEF,IAAK,mBACHtB,EAAmBhB,IAAI,CACnB0C,IAAKnB,EAAImB,IAAMF,EACfI,KAAMrB,EAAIqB,KAAOP,EAAaC,IAElC,MAEF,IAAK,kBACHtB,EAAmBhB,IAAI,CACnB0C,IAAKnB,EAAImB,IAAMF,EACfI,KAAMrB,EAAIqB,OAEd,MAEF,IAAK,qBACH5B,EAAmBhB,IAAI,CACnB0C,IAAKnB,EAAImB,IAAM5C,EAAa+C,cAC5BD,KAAMrB,EAAIqB,aApGdrE,EAAQP,UAAU8B,EAAckB,EAAoBO,GA4G5D,SAASuB,EAAahD,GAClB,IAAIiD,EAAMjD,EAAapE,KAAK,cAAgB6C,EAAQ8C,mBACpD,GAAI9C,EAAQ8C,qBAAuB9C,EAAQyE,aAAc,CACrD,IAAIC,EAASnD,EAAapE,KAAK6C,EAAQ8C,sBAClC0B,GAAOE,EAASF,KACjBA,EAAME,GAMd,OAHKF,IACDA,EAAMjD,EAAapE,KAAK,SAErBqH,EAEX,OA1QItI,EAAEyI,WAAW3E,KAAaC,IAC1BA,EAAWD,EACXA,EAAU,IAEdA,EAAU9D,EAAE6D,OAzB6B,CACrC6E,aAAa,EACbtF,YAAY,EACZoD,UAAW,EACXnD,aAAc,6BACdC,kBAAmB,8BACnB4C,UAAW,MACXH,QAAS,GACTI,SAAU,GACVF,eAAe,EACf1C,UAAW,sBACXxD,QAAS,KACTiG,gBAAgB,EAChB2C,UAAU,EACV3D,MAAM,EACNgD,gBAAgB,EAChBnD,kBAAkB,EAClB+B,mBAAoB,KACpB2B,cAAc,EACdK,OAAQ,MAMiB9E,GAsQtBZ,KAAKwE,MAAK,WACb,IAA4BpB,EAAuBC,EAA/ClB,EAAerF,EAAEkD,MAMrB,SAAS2F,IACL,IAAIC,EAAmBpD,EAAoBL,EAAaV,MAAO2B,EAAuB,KACtFA,EAAwB+B,EAAahD,GAChCkB,IACDA,EAAqBvG,EAAE,6CAA6CuF,IAAI,CACpEC,QAAS,OACTuD,SAAU,WACVC,WAAY,SACZJ,OAAQ9E,EAAQ8E,SACjBlH,KAAKoH,IAERzD,EAAa4D,GAAG,cAChB5D,EAAajE,KAAK,iBAAkBiE,EAAawC,cACjDxC,EAAajE,KAAK,iBAAkBiE,EAAa+C,eACjD/C,EAAa6D,SAAQ,WACb7D,EAAawC,eAAiBxC,EAAajE,KAAK,mBAAqBiE,EAAa+C,gBAAkB/C,EAAajE,KAAK,mBACtHyF,EAAMxB,EAAckB,GAExBlB,EAAajE,KAAK,iBAAkBiE,EAAawC,cACjDxC,EAAajE,KAAK,iBAAkBiE,EAAa+C,mBAGrDtE,EAAQkE,gBACR3C,EAAa6C,SAASiB,OAAO5C,GAC7BlB,EAAa6C,SAAS3C,IAAI,WAAY,aAEtCvB,EAAamF,OAAO5C,GAGxBH,EADgBjB,EAAeE,EAAcgD,EAAahD,IACrBA,EAAciB,EAAuBC,GAC1EM,EAAMxB,EAAckB,GAnCxBvG,EAAEoJ,QAAQC,QAAO,WACT9C,GACAM,EAAMxB,EAAckB,MAmCxBzC,EAAQ4E,YACRrD,EAAaiE,OAAM,WACfT,OAGJxD,EAAakE,OAAM,WACfV,OAGRxD,EAAa/C,GAAG,wBAAwB,WACpCuE,EAAMxB,EAAckB,MAExBlB,EAAa/C,GAAG,aAAa,WACrBiE,GACAA,EAAmB7C,YAG3B2B,EAAa/C,GAAG,QAAQ,WAChBiE,IAAuBzC,EAAQ4E,aAC/BnC,EAAmB7C,YAG3B2B,EAAa/C,GAAG,SAAS,WACrB,IAAIa,EAAYkF,EAAahD,GAAegB,EAAYlB,EAAeE,EAAclC,GAAY2C,GAAS,EAU1G,OATIhC,EAAQ6E,UAAYtC,EAAY,IAzS5C,SAAuB7D,EAAOW,GAC1B,IAAIlD,EAAOuC,EAAMmC,MAOjB,GANIb,EAAQe,kBAEsB,QAD9B5E,EAAOA,EAAK6E,QAAQ,qBAAsB,SACjC7E,EAAKgF,OAAS,KACnB9B,GAAalD,EAAKgF,OAAS,GAG/BnB,EAAQkB,KAAM,CAEd,IADA,IAAIwE,EAAcvJ,EAAKqE,MAAM,IAAIC,IAAIN,GAC5BwF,EAAe,EAAGC,EAAetF,EAAWnE,GAAQkD,EAAWsG,EAAeC,EAAcD,GAAgBD,EAAYG,OACjIxG,GAAaA,EAAYqG,EAAYvE,OAEzCzC,EAAMmC,IAAI1E,EAAK2J,OAAO,EAAGzG,IA6RjB0G,CAAcxE,EAAclC,GAC5B2C,GAAS,GAETM,EAA0BC,EAAWhB,EAAciB,EAAuBC,IAlFrD,wBAAtBzC,EAAQP,WAA6D,qBAAtBO,EAAQP,WAAiE,mBAAtBO,EAAQP,WAA4BO,EAAQ/D,SAAsC,mBAApB+D,EAAQ/D,UAqFvK8G,EAAMxB,EAAckB,GAEjBT,WApX3B,CAyXGgE","file":"/js/products/edit.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 40);\n","module.exports = {\r\n    showSuccessMessage: function(message) {\r\n        $(\"#successMessageDiv\").text(message);\r\n        $(\"#successMessageAlert\").removeAttr(\"hidden\");\r\n    },\r\n\r\n    showErrorMessage: function(message) {\r\n        $(\"#errorMessageDiv\").text(message);\r\n        $(\"#errorMessageAlert\").removeAttr(\"hidden\");\r\n    } \r\n};\r\n","require(\"bootstrap-maxlength/dist/bootstrap-maxlength\");\r\nimport { showSuccessMessage, showErrorMessage } from \"./../alertMessages\";\r\n\r\nfunction readURL(input) {\r\n    try {\r\n        if (input.files && input.files[0]) {\r\n            var reader = new FileReader();\r\n\r\n            reader.onload = function(e) {\r\n                $(\"#previewImage\").attr(\"src\", e.target.result);\r\n            };\r\n\r\n            reader.readAsDataURL(input.files[0]);\r\n        }\r\n    } catch (ex) {\r\n        showErrorMessage(\"Error when trying to preview selected image\");\r\n    }\r\n}\r\n\r\n$(document).on(\"change\", \"#inputFileId\", function(event) {\r\n    event.stopPropagation();\r\n    readURL(this);\r\n});\r\n\r\nfunction ProcessSubmit(e, form, modalId, successMessage, errorMessage) {\r\n    if (form.checkValidity() === false) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    } else {\r\n        e.preventDefault();\r\n        var formData = new FormData(form);\r\n        var action = $(form).attr(\"action\");\r\n\r\n        $.ajax({\r\n            url: action,\r\n            data: formData,\r\n            cache: false,\r\n            contentType: false,\r\n            processData: false,\r\n            method: \"POST\",\r\n            success: function(data) {\r\n                $(\"#response\").html(data);\r\n                showSuccessMessage(successMessage);\r\n            },\r\n            error: function(jqXHR, textStatus, errorThrown) {\r\n                console.log(textStatus);\r\n                console.log(errorThrown);\r\n                showErrorMessage(errorMessage);\r\n            },\r\n            complete: function(jqXHR, textStatus) {\r\n                $(modalId).modal(\"hide\");\r\n            }\r\n        });\r\n    }\r\n\r\n    form.classList.add(\"was-validated\");\r\n}\r\n\r\n$(\"#editModalForm\").on(\"submit\", function(e) {\r\n    ProcessSubmit(\r\n        e,\r\n        this,\r\n        \"#editModal\",\r\n        \"Product updated successfully\",\r\n        \"Error when trying to update a product\"\r\n    );\r\n});\r\n\r\n$(\"#createModalForm\").on(\"submit\", function(e) {\r\n    ProcessSubmit(\r\n        e,\r\n        this,\r\n        \"#createModal\",\r\n        \"Product created successfully\",\r\n        \"Error when trying to create a product\"\r\n    );\r\n});\r\n\r\n//bootstrap-maxlength\r\n$(\"input[maxlength], textarea\").maxlength({\r\n    alwaysShow: true, //if true the threshold will be ignored and the remaining length indication will be always showing up while typing or on focus on the input. Default: false.\r\n    // threshold: 10, //Ignored if alwaysShow is true. This is a number indicating how many chars are left to start displaying the indications. Default: 10\r\n    warningClass: \"form-text text-muted mt-1\", //it's the class of the element with the indicator. By default is the bootstrap \"badge badge-success\" but can be changed to anything you'd like.\r\n    limitReachedClass: \"form-text text-muted mt-1\", //it's the class the element gets when the limit is reached. Default is \"badge badge-danger\". Replace with text-danger if you want it to be red.\r\n    //separator: ' of ', //represents the separator between the number of typed chars and total number of available chars. Default is \"/\".\r\n    //preText: 'You have ', //is a string of text that can be outputted in front of the indicator. preText is empty by default.\r\n    //postText: ' chars remaining.', //is a string outputted after the indicator. postText is empty by default.\r\n    //showMaxLength: true, //showMaxLength: if false, will display just the number of typed characters, e.g. will not display the max length. Default: true.\r\n    //showCharsTyped: true, //if false, will display just the remaining length, e.g. will display remaining lenght instead of number of typed characters. Default: true.\r\n    placement: \"bottom-right-inside\" //is a string, object, or function, to define where to output the counter. Possible string values are: bottom ( default option ), left, top, right, bottom-right, top-right, top-left, bottom-left and centered-right. Are also available : **bottom-right-inside** (like in Google's material design, **top-right-inside**, **top-left-inside** and **bottom-left-inside**. stom placements can be passed as an object, with keys top, right, bottom, left, and position. These are passed to $.fn.css. A custom function may also be passed. This method is invoked with the {$element} Current Input, the {$element} MaxLength Indicator, and the Current Input's Position {bottom height left right top width}.\r\n\r\n    //appendToParent: true, // appends the maxlength indicator badge to the parent of the input rather than to the body.\r\n    //message: an alternative way to provide the message text, i.e. 'You have typed %charsTyped% chars, %charsRemaining% of %charsTotal% remaining'. %charsTyped%, %charsRemaining% and %charsTotal% will be replaced by the actual values. This overrides the options separator, preText, postText and showMaxLength. Alternatively you may supply a function that the current text and max length and returns the string to be displayed. For example, function(currentText, maxLength) { return '' + Math.ceil(currentText.length / 160) + ' SMS Message(s)';}\r\n    //utf8: if true the input will count using utf8 bytesize/encoding. For example: the '£' character is counted as two characters.\r\n    //showOnReady: shows the badge as soon as it is added to the page, similar to alwaysShow\r\n    //twoCharLinebreak: count linebreak as 2 characters to match IE/Chrome textarea validation\r\n    //customMaxAttribute: String -- allows a custom attribute to display indicator without triggering native maxlength behaviour. Ignored if value greater than a native maxlength attribute. 'overmax' class gets added when exceeded to allow user to implement form validation.\r\n    //allowOverMax: Will allow the input to be over the customMaxLength. Useful in soft max situations.\r\n});\r\n","(function($) {\n    \"use strict\";\n    if (!$.event.special.destroyed) {\n        $.event.special.destroyed = {\n            remove: function(o) {\n                if (o.handler) {\n                    o.handler();\n                }\n            }\n        };\n    }\n    $.fn.extend({\n        maxlength: function(options, callback) {\n            var documentBody = $(\"body\"), defaults = {\n                showOnReady: false,\n                alwaysShow: true,\n                threshold: 0,\n                warningClass: \"small form-text text-muted\",\n                limitReachedClass: \"small form-text text-danger\",\n                separator: \" / \",\n                preText: \"\",\n                postText: \"\",\n                showMaxLength: true,\n                placement: \"bottom-right-inside\",\n                message: null,\n                showCharsTyped: true,\n                validate: false,\n                utf8: false,\n                appendToParent: false,\n                twoCharLinebreak: true,\n                customMaxAttribute: null,\n                allowOverMax: false,\n                zIndex: 1099\n            };\n            if ($.isFunction(options) && !callback) {\n                callback = options;\n                options = {};\n            }\n            options = $.extend(defaults, options);\n            function utf8CharByteCount(character) {\n                var c = character.charCodeAt();\n                return !c ? 0 : c < 128 ? 1 : c < 2048 ? 2 : 3;\n            }\n            function utf8Length(string) {\n                return string.split(\"\").map(utf8CharByteCount).concat(0).reduce((function(sum, val) {\n                    return sum + val;\n                }));\n            }\n            function inputLength(input) {\n                var text = input.val();\n                if (options.twoCharLinebreak) {\n                    text = text.replace(/\\r(?!\\n)|\\n(?!\\r)/g, \"\\r\\n\");\n                } else {\n                    text = text.replace(/(?:\\r\\n|\\r|\\n)/g, \"\\n\");\n                }\n                var currentLength = 0;\n                if (options.utf8) {\n                    currentLength = utf8Length(text);\n                } else {\n                    currentLength = text.length;\n                }\n                if (input.prop(\"type\") === \"file\" && input.val() !== \"\") {\n                    currentLength -= 12;\n                }\n                return currentLength;\n            }\n            function truncateChars(input, maxlength) {\n                var text = input.val();\n                if (options.twoCharLinebreak) {\n                    text = text.replace(/\\r(?!\\n)|\\n(?!\\r)/g, \"\\r\\n\");\n                    if (text[text.length - 1] === \"\\n\") {\n                        maxlength -= text.length % 2;\n                    }\n                }\n                if (options.utf8) {\n                    var indexedSize = text.split(\"\").map(utf8CharByteCount);\n                    for (var removedBytes = 0, bytesPastMax = utf8Length(text) - maxlength; removedBytes < bytesPastMax; removedBytes += indexedSize.pop()) ;\n                    maxlength -= maxlength - indexedSize.length;\n                }\n                input.val(text.substr(0, maxlength));\n            }\n            function charsLeftThreshold(input, threshold, maxlength) {\n                var output = true;\n                if (!options.alwaysShow && maxlength - inputLength(input) > threshold) {\n                    output = false;\n                }\n                return output;\n            }\n            function remainingChars(input, maxlength) {\n                var length = maxlength - inputLength(input);\n                return length;\n            }\n            function showRemaining(currentInput, indicator) {\n                indicator.css({\n                    display: \"block\"\n                });\n                currentInput.trigger(\"maxlength.shown\");\n            }\n            function hideRemaining(currentInput, indicator) {\n                if (options.alwaysShow) {\n                    return;\n                }\n                indicator.css({\n                    display: \"none\"\n                });\n                currentInput.trigger(\"maxlength.hidden\");\n            }\n            function updateMaxLengthHTML(currentInputText, maxLengthThisInput, typedChars) {\n                var output = \"\";\n                if (options.message) {\n                    if (typeof options.message === \"function\") {\n                        output = options.message(currentInputText, maxLengthThisInput);\n                    } else {\n                        output = options.message.replace(\"%charsTyped%\", typedChars).replace(\"%charsRemaining%\", maxLengthThisInput - typedChars).replace(\"%charsTotal%\", maxLengthThisInput);\n                    }\n                } else {\n                    if (options.preText) {\n                        output += options.preText;\n                    }\n                    if (!options.showCharsTyped) {\n                        output += maxLengthThisInput - typedChars;\n                    } else {\n                        output += typedChars;\n                    }\n                    if (options.showMaxLength) {\n                        output += options.separator + maxLengthThisInput;\n                    }\n                    if (options.postText) {\n                        output += options.postText;\n                    }\n                }\n                return output;\n            }\n            function manageRemainingVisibility(remaining, currentInput, maxLengthCurrentInput, maxLengthIndicator) {\n                if (maxLengthIndicator) {\n                    maxLengthIndicator.html(updateMaxLengthHTML(currentInput.val(), maxLengthCurrentInput, maxLengthCurrentInput - remaining));\n                    if (remaining > 0) {\n                        if (charsLeftThreshold(currentInput, options.threshold, maxLengthCurrentInput)) {\n                            showRemaining(currentInput, maxLengthIndicator.removeClass(options.limitReachedClass).addClass(options.warningClass));\n                        } else {\n                            hideRemaining(currentInput, maxLengthIndicator);\n                        }\n                    } else {\n                        showRemaining(currentInput, maxLengthIndicator.removeClass(options.warningClass).addClass(options.limitReachedClass));\n                    }\n                }\n                if (options.customMaxAttribute) {\n                    if (remaining < 0) {\n                        currentInput.addClass(\"overmax\");\n                    } else {\n                        currentInput.removeClass(\"overmax\");\n                    }\n                }\n            }\n            function getPosition(currentInput) {\n                var el = currentInput[0];\n                return $.extend({}, typeof el.getBoundingClientRect === \"function\" ? el.getBoundingClientRect() : {\n                    width: el.offsetWidth,\n                    height: el.offsetHeight\n                }, currentInput.offset());\n            }\n            function placeWithCSS(placement, maxLengthIndicator) {\n                if (!placement || !maxLengthIndicator) {\n                    return;\n                }\n                var POSITION_KEYS = [ \"top\", \"bottom\", \"left\", \"right\", \"position\" ];\n                var cssPos = {};\n                $.each(POSITION_KEYS, (function(i, key) {\n                    var val = options.placement[key];\n                    if (typeof val !== \"undefined\") {\n                        cssPos[key] = val;\n                    }\n                }));\n                maxLengthIndicator.css(cssPos);\n                return;\n            }\n            function place(currentInput, maxLengthIndicator) {\n                var pos = getPosition(currentInput);\n                if ($.type(options.placement) === \"function\") {\n                    options.placement(currentInput, maxLengthIndicator, pos);\n                    return;\n                }\n                if ($.isPlainObject(options.placement)) {\n                    placeWithCSS(options.placement, maxLengthIndicator);\n                    return;\n                }\n                var inputOuter = currentInput.outerWidth(), outerWidth = maxLengthIndicator.outerWidth(), actualWidth = maxLengthIndicator.width(), actualHeight = maxLengthIndicator.height();\n                if (options.appendToParent) {\n                    pos.top -= currentInput.parent().offset().top;\n                    pos.left -= currentInput.parent().offset().left;\n                }\n                switch (options.placement) {\n                  case \"bottom\":\n                    maxLengthIndicator.css({\n                        top: pos.top + pos.height,\n                        left: pos.left + pos.width / 2 - actualWidth / 2\n                    });\n                    break;\n\n                  case \"top\":\n                    maxLengthIndicator.css({\n                        top: pos.top - actualHeight,\n                        left: pos.left + pos.width / 2 - actualWidth / 2\n                    });\n                    break;\n\n                  case \"left\":\n                    maxLengthIndicator.css({\n                        top: pos.top + pos.height / 2 - actualHeight / 2,\n                        left: pos.left - actualWidth\n                    });\n                    break;\n\n                  case \"right\":\n                    maxLengthIndicator.css({\n                        top: pos.top + pos.height / 2 - actualHeight / 2,\n                        left: pos.left + pos.width\n                    });\n                    break;\n\n                  case \"bottom-right\":\n                    maxLengthIndicator.css({\n                        top: pos.top + pos.height,\n                        left: pos.left + pos.width\n                    });\n                    break;\n\n                  case \"top-right\":\n                    maxLengthIndicator.css({\n                        top: pos.top - actualHeight,\n                        left: pos.left + inputOuter\n                    });\n                    break;\n\n                  case \"top-left\":\n                    maxLengthIndicator.css({\n                        top: pos.top - actualHeight,\n                        left: pos.left - outerWidth\n                    });\n                    break;\n\n                  case \"bottom-left\":\n                    maxLengthIndicator.css({\n                        top: pos.top + currentInput.outerHeight(),\n                        left: pos.left - outerWidth\n                    });\n                    break;\n\n                  case \"centered-right\":\n                    maxLengthIndicator.css({\n                        top: pos.top + actualHeight / 2,\n                        left: pos.left + inputOuter - outerWidth - 3\n                    });\n                    break;\n\n                  case \"bottom-right-inside\":\n                    maxLengthIndicator.css({\n                        top: pos.top + pos.height,\n                        left: pos.left + pos.width - outerWidth\n                    });\n                    break;\n\n                  case \"top-right-inside\":\n                    maxLengthIndicator.css({\n                        top: pos.top - actualHeight,\n                        left: pos.left + inputOuter - outerWidth\n                    });\n                    break;\n\n                  case \"top-left-inside\":\n                    maxLengthIndicator.css({\n                        top: pos.top - actualHeight,\n                        left: pos.left\n                    });\n                    break;\n\n                  case \"bottom-left-inside\":\n                    maxLengthIndicator.css({\n                        top: pos.top + currentInput.outerHeight(),\n                        left: pos.left\n                    });\n                    break;\n                }\n            }\n            function isPlacementMutable() {\n                return options.placement === \"bottom-right-inside\" || options.placement === \"top-right-inside\" || typeof options.placement === \"function\" || options.message && typeof options.message === \"function\";\n            }\n            function getMaxLength(currentInput) {\n                var max = currentInput.attr(\"maxlength\") || options.customMaxAttribute;\n                if (options.customMaxAttribute && !options.allowOverMax) {\n                    var custom = currentInput.attr(options.customMaxAttribute);\n                    if (!max || custom < max) {\n                        max = custom;\n                    }\n                }\n                if (!max) {\n                    max = currentInput.attr(\"size\");\n                }\n                return max;\n            }\n            return this.each((function() {\n                var currentInput = $(this), maxLengthCurrentInput, maxLengthIndicator;\n                $(window).resize((function() {\n                    if (maxLengthIndicator) {\n                        place(currentInput, maxLengthIndicator);\n                    }\n                }));\n                function firstInit() {\n                    var maxlengthContent = updateMaxLengthHTML(currentInput.val(), maxLengthCurrentInput, \"0\");\n                    maxLengthCurrentInput = getMaxLength(currentInput);\n                    if (!maxLengthIndicator) {\n                        maxLengthIndicator = $('<span class=\"bootstrap-maxlength\"></span>').css({\n                            display: \"none\",\n                            position: \"absolute\",\n                            whiteSpace: \"nowrap\",\n                            zIndex: options.zIndex\n                        }).html(maxlengthContent);\n                    }\n                    if (currentInput.is(\"textarea\")) {\n                        currentInput.data(\"maxlenghtsizex\", currentInput.outerWidth());\n                        currentInput.data(\"maxlenghtsizey\", currentInput.outerHeight());\n                        currentInput.mouseup((function() {\n                            if (currentInput.outerWidth() !== currentInput.data(\"maxlenghtsizex\") || currentInput.outerHeight() !== currentInput.data(\"maxlenghtsizey\")) {\n                                place(currentInput, maxLengthIndicator);\n                            }\n                            currentInput.data(\"maxlenghtsizex\", currentInput.outerWidth());\n                            currentInput.data(\"maxlenghtsizey\", currentInput.outerHeight());\n                        }));\n                    }\n                    if (options.appendToParent) {\n                        currentInput.parent().append(maxLengthIndicator);\n                        currentInput.parent().css(\"position\", \"relative\");\n                    } else {\n                        documentBody.append(maxLengthIndicator);\n                    }\n                    var remaining = remainingChars(currentInput, getMaxLength(currentInput));\n                    manageRemainingVisibility(remaining, currentInput, maxLengthCurrentInput, maxLengthIndicator);\n                    place(currentInput, maxLengthIndicator);\n                }\n                if (options.showOnReady) {\n                    currentInput.ready((function() {\n                        firstInit();\n                    }));\n                } else {\n                    currentInput.focus((function() {\n                        firstInit();\n                    }));\n                }\n                currentInput.on(\"maxlength.reposition\", (function() {\n                    place(currentInput, maxLengthIndicator);\n                }));\n                currentInput.on(\"destroyed\", (function() {\n                    if (maxLengthIndicator) {\n                        maxLengthIndicator.remove();\n                    }\n                }));\n                currentInput.on(\"blur\", (function() {\n                    if (maxLengthIndicator && !options.showOnReady) {\n                        maxLengthIndicator.remove();\n                    }\n                }));\n                currentInput.on(\"input\", (function() {\n                    var maxlength = getMaxLength(currentInput), remaining = remainingChars(currentInput, maxlength), output = true;\n                    if (options.validate && remaining < 0) {\n                        truncateChars(currentInput, maxlength);\n                        output = false;\n                    } else {\n                        manageRemainingVisibility(remaining, currentInput, maxLengthCurrentInput, maxLengthIndicator);\n                    }\n                    if (isPlacementMutable()) {\n                        place(currentInput, maxLengthIndicator);\n                    }\n                    return output;\n                }));\n            }));\n        }\n    });\n})(jQuery);"],"sourceRoot":""}